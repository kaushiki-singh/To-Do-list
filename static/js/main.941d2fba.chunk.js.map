{"version":3,"sources":["ToDoList.js","App.js","reportWebVitals.js","index.js"],"names":["ToDoList","props","useState","editInput","setEditInput","show","addEdit","setAddEdit","className","onClick","onSelectDelete","id","placeholder","onChange","event","target","value","trim","onSelectEdit","itemVal","App","item","setItem","displayItem","setDisplayItem","deleteItem","oldItems","filter","arrEle","index","editItem","editValue","type","map","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yOA4DeA,EA1DE,SAACC,GAAW,IAAD,EAEUC,mBAAS,IAFnB,mBAEjBC,EAFiB,KAENC,EAFM,OAGMF,mBAAS,CACnCG,MAAM,IAJc,mBAGjBC,EAHiB,KAGRC,EAHQ,KAiBxB,OACI,mCACA,sBAAKC,UAAU,cAAf,UAEA,wBAAQA,UAAU,eACjBC,QAAS,WACLR,EAAMS,eAAeT,EAAMU,KAFhC,oBAKCL,EAAQD,KACL,qCACA,uBACA,0BACAG,UAAU,WACVI,YAAY,OACZC,SArBW,SAACC,GAChBV,EAAaU,EAAMC,OAAOC,MAAMC,WAuB5B,wBACAT,UAAU,WACVC,QAAS,WACLR,EAAMiB,aAAajB,EAAMU,GAAIR,GAC7BI,EAAW,CAACF,MAAM,KAJtB,kBAaJ,wBAAQG,UAAU,aACjBC,QA1CY,WACbF,EAAW,CAACF,MAAM,KAwClB,kBAIA,oBAAIG,UAAU,OAAd,SAAsBP,EAAMkB,gBCerBC,EAjEH,WAAO,IAAD,EACQlB,mBAAS,IADjB,mBACTmB,EADS,KACHC,EADG,OAEsBpB,mBAAS,IAF/B,mBAETqB,EAFS,KAEIC,EAFJ,KAcVC,EAAa,SAACd,GAGda,GAAe,SAACE,GACd,OAAOA,EAASC,QAAO,SAACC,EAAQC,GAC9B,OAAOA,IAAUlB,SAKrBmB,EAAW,SAACnB,EAAIoB,GACN,KAAdA,GACDP,GAAe,SAACE,GAEd,OADAA,EAASf,GAAMoB,EACR,YAAIL,OAOd,OACE,qBAAKlB,UAAY,WAAjB,SACE,sBAAKA,UAAY,aAAjB,UACE,uBACA,2CACA,uBACA,0BAAUG,GAAK,OAAOqB,KAAK,OAAOpB,YAAY,YAAYC,SArC7C,SAACC,GAClBQ,EAAQR,EAAMC,OAAOC,QAoC+DA,MAAOK,IACvF,wBAAQV,GAAG,MAAMF,QAnCL,WAChBe,GAAe,SAACE,GACd,MAAM,GAAN,mBAAWA,GAAX,CAAqBL,OAEvBC,EAAQ,KA+BJ,eAEA,6BAGGC,EAAYU,KAAK,SAACd,EAASU,GAC1B,OAAO,cAAC,EAAD,CAEJlB,GAAIkB,EACHV,QAASA,EACTT,eAAkBe,EAClBP,aAAgBY,GAJbD,cCzCJK,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.941d2fba.chunk.js","sourcesContent":["import React, {useState} from 'react';\r\n\r\nconst ToDoList = (props) => {\r\n\r\n    const [editInput, setEditInput] = useState(\"\");\r\n    const [addEdit, setAddEdit] = useState({\r\n        show: false,\r\n    });\r\n\r\n    const EditItem = () => {\r\n        setAddEdit({show: true});\r\n    };\r\n\r\n    const editUpdate = (event) => {\r\n        setEditInput(event.target.value.trim());\r\n    };\r\n\r\n\r\n    \r\n    return (\r\n        <>\r\n        <div className=\"todo-styles\">\r\n\r\n        <button className=\"buttonDelete\"\r\n         onClick={() => {\r\n             props.onSelectDelete(props.id)}}>\r\n                 Delete</button>\r\n\r\n        {addEdit.show ? (\r\n            <>\r\n            <br />\r\n            <textarea\r\n            className=\"editTask\"\r\n            placeholder=\"edit\"\r\n            onChange={editUpdate}\r\n            />\r\n\r\n            <button\r\n            className=\"saveTask\"\r\n            onClick={()=>{\r\n                props.onSelectEdit(props.id, editInput);\r\n                setAddEdit({show: false});\r\n            }}\r\n            >\r\n                +\r\n            </button>\r\n            </>\r\n        ) : (\r\n           \r\n        \r\n        <button className=\"buttonEdit\"\r\n         onClick={EditItem}>\r\n                 Edit</button>\r\n        )}\r\n        <li className=\"list\">{props.itemVal}</li>\r\n        </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ToDoList;","import React, {useState} from 'react';\nimport './App.css';\nimport ToDoList from './ToDoList';\n\nconst App = () => {\n  const [item, setItem] = useState(\"\");\n  const [displayItem, setDisplayItem] = useState([]);\n\n  const inputEvent = (event) => {\n    setItem(event.target.value);\n  }\n  const addToList = () => {\n    setDisplayItem((oldItems) => {\n      return [...oldItems, item];\n    });\n    setItem(\"\");\n  }\n\n  const deleteItem = (id) => {\n  \n        // console.log(\"deleted\");\n        setDisplayItem((oldItems) => {\n          return oldItems.filter((arrEle, index)=>{\n            return index !== id;\n\n          });\n        });\n  }\n  const editItem = (id, editValue) => {\n if(editValue !== \"\"){\n   setDisplayItem((oldItems)=> {\n     oldItems[id] = editValue;\n     return [...oldItems];\n   });\n   \n }\n  \n  }\n\n  return (\n    <div className = \"main_div\">\n      <div className = \"center-div\">\n        <br />\n        <h1>ToDo List</h1>\n        <br/>\n        <textarea id = \"task\" type=\"text\" placeholder=\"add items\" onChange={inputEvent} value={item}/>\n        <button id=\"btn\" onClick={addToList}>+</button>\n\n        <ol>\n          {/* <li>{displayItem}</li> */}\n\n          {displayItem.map( (itemVal, index) => {\n            return <ToDoList\n              key={index}\n               id={index}\n                itemVal={itemVal}\n                onSelectDelete = {deleteItem}\n                onSelectEdit = {editItem}\n                />\n            // return <li>{itemVal}</li>\n          } )}\n        </ol>\n      </div>\n\n    </div>\n\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}